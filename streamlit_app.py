import streamlit as st
from openai import OpenAI
import pdfplumber
from docx import Document
import os
import tempfile

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
OPENAI_API_KEY = "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"  # Project API Key
PROJECT_ID = "proj_3LFcRXiyy2eIhtVUFDx06BmA"         # ‚Üê –í–°–¢–ê–í–¨ –°–Æ–î–ê —Å–≤–æ–π project ID
PROMPT_ID = "pmpt_68900ac35e7081959fe8c48c9a077aec0eeaf77803903995"

client = OpenAI(api_key=OPENAI_API_KEY, project=PROJECT_ID)

# üìÑ –ü–∞—Ä—Å–∏–Ω–≥ PDF
def extract_text_from_pdf(path):
    with pdfplumber.open(path) as pdf:
        return '\n'.join([page.extract_text() or '' for page in pdf.pages]).strip()

# üìÑ –ü–∞—Ä—Å–∏–Ω–≥ DOCX
def extract_text_from_docx(path):
    doc = Document(path)
    return '\n'.join([p.text for p in doc.paragraphs]).strip()

# üìÑ –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∞—Ä—Å–µ—Ä
def read_file(file):
    ext = os.path.splitext(file.name)[-1].lower()
    with tempfile.NamedTemporaryFile(delete=False, suffix=ext) as tmp:
        tmp.write(file.read())
        tmp_path = tmp.name

    if ext == '.pdf':
        return extract_text_from_pdf(tmp_path)
    elif ext == '.docx':
        return extract_text_from_docx(tmp_path)
    elif ext == '.txt':
        with open(tmp_path, 'r', encoding='utf-8') as f:
            return f.read()
    else:
        return None

# üöÄ –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å Streamlit
st.set_page_config(page_title="–ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –ë–∏—Ç—Ä–æ–Ω–∏–∫—Å", layout="centered")
st.title("ü§ñ –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ë–∏—Ç—Ä–æ–Ω–∏–∫—Å")
st.markdown("–ó–∞–≥—Ä—É–∑–∏ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–æ–µ –∑–∞–¥–∞–Ω–∏–µ –∏ –≤—ã–±–µ—Ä–∏ —Ä–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:")

uploaded_file = st.file_uploader("üìé –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª (PDF, DOCX, TXT)", type=["pdf", "docx", "txt"])
mode = st.radio("‚öôÔ∏è –†–µ–∂–∏–º —Ä–∞–±–æ—Ç—ã:", ["–†–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ç–µ–∫—Å—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ GPT-4o", "–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ñ–∞–π–ª –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ Prompt"])

if uploaded_file and st.button("üöÄ –ü—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å"):
    with st.spinner("–û–±—Ä–∞–±–∞—Ç—ã–≤–∞—é..."):
        try:
            ext = os.path.splitext(uploaded_file.name)[-1].lower()

            if mode == "–†–∞—Å–ø–∞—Ä—Å–∏—Ç—å —Ç–µ–∫—Å—Ç –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤ GPT-4o":
                file_text = read_file(uploaded_file)
                if not file_text:
                    st.error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø—Ä–æ—á–∏—Ç–∞—Ç—å —Ñ–∞–π–ª.")
                else:
                    response = client.chat.completions.create(
                        model="gpt-4o",
                        messages=[
                            {"role": "system", "content": "–¢—ã ‚Äî –∞—Å—Å–∏—Å—Ç–µ–Ω—Ç –∫–æ–º–ø–∞–Ω–∏–∏ –ë–∏—Ç—Ä–æ–Ω–∏–∫—Å. –ê–Ω–∞–ª–∏–∑–∏—Ä—É–π –¢–ó —Å—Ç—Ä–æ–≥–æ –ø–æ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏. –°–Ω–∞—á–∞–ª–∞ –¥–µ–ª–∞–π –∞–Ω–∞–ª–∏–∑, –ø–æ—Ç–æ–º –≤—ã–≤–æ–¥–∏ –≤ JSON –∏–ª–∏ —Ç–µ–∫—Å—Ç."},
                            {"role": "user", "content": file_text}
                        ]
                    )
                    result = response.choices[0].message.content.strip()
                    st.success("‚úÖ GPT-4o –∑–∞–≤–µ—Ä—à–∏–ª –∞–Ω–∞–ª–∏–∑.")
                    st.text_area("üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞:", result, height=400)
                    st.download_button("üíæ –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∫ .txt", result, file_name="—Ä–µ–∑—É–ª—å—Ç–∞—Ç.txt")

            else:
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª –≤—Ä–µ–º–µ–Ω–Ω–æ
                with tempfile.NamedTemporaryFile(delete=False, suffix=ext) as tmp:
                    tmp.write(uploaded_file.read())
                    tmp_path = tmp.name

                # –ó–∞–≥—Ä—É–∂–∞–µ–º —Ñ–∞–π–ª –≤ OpenAI
                uploaded = client.files.create(
                    file=open(tmp_path, "rb"),
                    purpose="assistants"
                )

                # –í—ã–∑—ã–≤–∞–µ–º —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω—ã–π Prompt
                response = client.responses.create(
                    prompt={
                        "id": PROMPT_ID,
                        "version": "latest"
                    },
                    file_ids=[uploaded.id]
                )

                result = response.content.strip()
                st.success("‚úÖ Prompt –æ–±—Ä–∞–±–æ—Ç–∞–ª —Ñ–∞–π–ª.")
                st.text_area("üìÑ –†–µ–∑—É–ª—å—Ç–∞—Ç:", result, height=400)
                st.download_button("üíæ –°–∫–∞—á–∞—Ç—å —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∫–∞–∫ .txt", result, file_name="—Ä–µ–∑—É–ª—å—Ç–∞—Ç.txt")

        except Exception as e:
            st.error(f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
